group 'com.sample'
version '1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version = '1.2.50'
    ext.spring_boot_version = '1.5.4.RELEASE'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"

        classpath(group: 'org.jfrog.buildinfo', name: 'build-info-extractor-gradle', version: '4.7.2')
    }
}

apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: 'org.springframework.boot'


task fatJar(type: Jar) {
    manifest {
        attributes "Main-Class": "com.sample.hello.Application"
    }
    baseName = 'all-in-one-jar'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}



if (file('jfrogcredentials.gradle').exists()) {
    apply from: 'jfrogcredentials.gradle'
}
ext.envContextUrl = System.getenv("ARTIFACTORY_CONTEXT") ?: "${artifactory_contextUrl}"

allprojects {
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: "com.jfrog.artifactory"

    repositories {
        mavenLocal()
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }


    artifactory {
        contextUrl = System.getenv("ARTIFACTORY_CONTEXT") ?: "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver

        publish {
            repository {
                repoKey = System.getenv('ARTIFACTORY_REPOKEY') ?: "${artifactory_repoKey}"
                username = System.getenv('ARTIFACTORY_USER') ?: "${artifactory_user}"
                password = System.getenv('ARTIFACTORY_PASSWORD') ?: "${artifactory_password}"
                maven = true
            }
            defaults {
                // publications ('ivyJava','mavenJava','foo')
                publishConfigs('archives', 'published')
                publishArtifacts = true
                publishBuildInfo = true
                publishPom = true
                publishIvy = false

            }

        }
        resolve {
            repository {
                repoKey = System.getenv('ARTIFACTORY_REPOKEY') ?: "${artifactory_repoKey}"
                username = System.getenv('ARTIFACTORY_USER') ?: "${artifactory_user}"
                password = System.getenv('ARTIFACTORY_PASSWORD') ?: "${artifactory_password}"
                maven = true
            }
        }
    }
}
repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.springframework.boot:spring-boot-starter-web'
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
